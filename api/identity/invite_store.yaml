# Copyright (C) 2018 Kamax SÃ rl
# https://www.kamax.io/
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>

swagger: '2.0'
info:
  title: "Matrix Identity Invites API"
  version: "1.0.0"
host: localhost:8090
schemes:
  - https
basePath: /_matrix/identity/api/v1
produces:
  - application/json
paths:
  "/store-invite":
    post:
      summary: Stores a 3PID invite for a room.
      description: |
        Stores the received 3PID invite for a room from a homeserver if no
        mapping already exists, informing the homeserver if and when a 3PID
        mappging gets created for that 3PID using the endpoint
        ``/_matrix/federation/v1/3pid/onBind``.

        An arbitrary number of other parameters may also be specified for
        the specific 3PID medium type handler of the Identity server.

        This endpoint takes form-data as input.
      operationId: inviteStore
      consumes:
        - multipart/form-data
      parameters:
        - in: form
          name: sender
          type: string
          required: true
          description: The Matrix user ID of the inviting user.
        - in: form
          name: room_id
          type: string
          required: true
          description: The Matrix room ID to which the user was invited.
        - in: form
          name: medium
          type: string
          required: true
          description: |
            The 3PID medium type for this invite.
            See the `3PID Types`_ Appendix.
        - in: form
          name: address
          type: string
          required: true
          description: The 3PID address for this invite.
      responses:
        200:
          description: The bind was successfully performed.
          examples:
            application/json: {
              "token": "SecretToken",
              "display_name": "j...@e....",
              "public_keys": [
                "key1",
                "key2"
              ]
            }
          schema:
            type: object
            properties:
              token:
                type: string
                description: |
                  The token that will be used to authenticate this invite
                  if a 3PID mapping is found.
              display_name:
                type: string
                description: |
                  The display name to be used for this 3PID invite for the
                  room membership, hiding the real 3PID address.
              public_keys:
                type: array
                description: Keys involved in storing this invite.
                items:
                  type: string
                  title: Long-term public signing key or ephemeral key.
            required:
              - "token"
              - "display_name"
              - "public_keys"
        400:
          description: A mapping already exists for that 3PID.
        501:
          description: The 3PID medium type is not supported and invite cannot be processed.
