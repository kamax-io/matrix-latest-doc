# Copyright (C) 2018 Kamax SÃ rl
# https://www.kamax.io/
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>

swagger: '2.0'
info:
  title: "Matrix Federation Transaction Push API"
  version: "1.0.0"
host: localhost:8448
schemes:
  - https
basePath: /_matrix/federation/v1
produces:
  - application/json
paths:
  "/send/{transactionId}":
    put:
      summary: Sends a transaction.
      description: Sends a transaction to a remote homeserver.
      operationId: sendTransaction
      parameters:
        - in: path
          name: transactionId
          type: string
          description: The ID for this transaction.
          required: true
          example: "123456789abcdef"
        - in: body
          name: body
          schema:
            type: object
            properties:
              origin:
                type: string
                description: Server name of the homeserver sending this transaction.
                required: true
                example: "example.org"
              origin_server_ts:
                type: integer
                description: |
                  Timestamp in milliseconds on originating homeserver when this
                  transaction started.
                required: true
                example: 1404835423000
              edus:
                type: array
                description: |
                  List of ephemeral messages. May be omitted if there are no
                  ephemeral messages to be sent.
                example: [
                  ...
                ]
                items:
                  type: EDU
              pdus:
                type: array
                description: List of persistent updates to rooms.
                required: true
                example: [
                  ...
                ]
                items:
                  type: PDU
            required:
              - "origin"
              - "origin_server_ts"
              - "pdus"
      responses:
        200:
          description: The request was processed successfully.
          examples:
            application/json: {
              "pdus": {
                "!eventId:example.org": {}
              }
            }
          schema:
            type: object
            properties:
              pdus:
                type: object
                description: Processing outcome of each PDU.
                additionalProperties:
                  type: object
            required:
              - "pdus"
